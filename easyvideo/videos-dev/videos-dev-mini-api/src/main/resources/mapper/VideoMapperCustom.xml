<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zing.boot.video.mapper.VideoMapperCustom" >
  <resultMap id="BaseResultMap" type="com.zing.boot.video.pojo.vo.VideoVO" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="audio_id" property="audioId" jdbcType="VARCHAR" />
    <result column="video_desc" property="videoDesc" jdbcType="VARCHAR" />
    <result column="video_path" property="videoPath" jdbcType="VARCHAR" />
    <result column="video_seconds" property="videoSeconds" jdbcType="REAL" />
    <result column="video_width" property="videoWidth" jdbcType="INTEGER" />
    <result column="video_height" property="videoHeight" jdbcType="INTEGER" />
    <result column="cover_path" property="coverPath" jdbcType="VARCHAR" />
    <result column="like_counts" property="likeCounts" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="face_image" property="faceImage" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="queryAllVideos" resultMap="BaseResultMap" parameterType="String">
  
  	SELECT v.*,u.face_image AS face_image,u.nickname AS nickname FROM video v
  	LEFT JOIN user u ON u.id = v.user_id
  	WHERE
  		1 = 1
  		<if test=" videoDesc != null and videoDesc != '' ">
  			AND v.video_desc LIKE '%${videoDesc}%'
  		</if>
  		<if test=" userId != null and userId != '' ">  
			AND v.user_id = #{userId}
		</if>
  		AND v.status = 1
  	ORDER BY v.create_time DESC
  
  </select>
  
  	<!-- 查询我关注的人发的视频 -->
	<select id="queryMyFollowVideos" resultMap="BaseResultMap" parameterType="String">
		SELECT v.*,u.face_image AS face_image,u.nickname AS nickname FROM video v
		LEFT JOIN user u ON v.user_id = u.id
		WHERE
			v.user_id IN (SELECT uf.user_id FROM user_fan uf WHERE uf.fan_id = #{userId})
			AND v.status = 1
			ORDER BY v.create_time DESC
	</select>
	
	<!-- 查询我喜欢的视频 -->
	<select id="queryMyLikeVideos" resultMap="BaseResultMap" parameterType="String">
		SELECT v.*,u.face_image AS face_image,u.nickname AS nickname FROM video v
		LEFT JOIN user u ON v.user_id = u.id
		WHERE
			v.id IN (SELECT ulv.video_id FROM user_like_video ulv WHERE ulv.user_id = #{userId})
			AND v.status = 1
			ORDER BY v.create_time DESC
	</select>
	
	
  
  <update id="addVideoLikeCount" parameterType="String">
  	UPDATE video SET like_counts=like_counts+1 WHERE id=#{videoId}
  </update>
  
  <update id="reduceVideoLikeCount" parameterType="String">
  	UPDATE video SET like_counts=like_counts-1 WHERE id=#{videoId}
  </update>
  
</mapper>